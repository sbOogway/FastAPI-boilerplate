"""Add nullable to players in hand

Revision ID: e1dda766e5bc
Revises: 415c301107e8
Create Date: 2025-10-11 20:26:38.842254

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e1dda766e5bc'
down_revision: Union[str, None] = '415c301107e8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_token_blacklist_token'), table_name='token_blacklist')
    op.drop_table('token_blacklist')
    op.add_column('hand', sa.Column('player_1', sa.String(), nullable=False))
    op.add_column('hand', sa.Column('player_2', sa.String(), nullable=False))
    op.add_column('hand', sa.Column('player_3', sa.String(), nullable=True))
    op.add_column('hand', sa.Column('player_4', sa.String(), nullable=True))
    op.add_column('hand', sa.Column('player_5', sa.String(), nullable=True))
    op.add_column('hand', sa.Column('player_6', sa.String(), nullable=True))
    op.add_column('hand', sa.Column('player_7', sa.String(), nullable=True))
    op.add_column('hand', sa.Column('player_8', sa.String(), nullable=True))
    op.add_column('hand', sa.Column('player_9', sa.String(), nullable=True))
    op.create_foreign_key(None, 'hand', 'player', ['player_1'], ['id'])
    op.create_foreign_key(None, 'hand', 'player', ['player_3'], ['id'])
    op.create_foreign_key(None, 'hand', 'player', ['player_9'], ['id'])
    op.create_foreign_key(None, 'hand', 'player', ['player_6'], ['id'])
    op.create_foreign_key(None, 'hand', 'player', ['player_5'], ['id'])
    op.create_foreign_key(None, 'hand', 'player', ['player_8'], ['id'])
    op.create_foreign_key(None, 'hand', 'player', ['player_2'], ['id'])
    op.create_foreign_key(None, 'hand', 'player', ['player_4'], ['id'])
    op.create_foreign_key(None, 'hand', 'player', ['player_7'], ['id'])
    op.create_unique_constraint(None, 'post', ['id'])
    op.create_unique_constraint(None, 'rate_limit', ['id'])
    op.create_unique_constraint(None, 'tier', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'tier', type_='unique')
    op.drop_constraint(None, 'rate_limit', type_='unique')
    op.drop_constraint(None, 'post', type_='unique')
    op.drop_constraint(None, 'hand', type_='foreignkey')
    op.drop_constraint(None, 'hand', type_='foreignkey')
    op.drop_constraint(None, 'hand', type_='foreignkey')
    op.drop_constraint(None, 'hand', type_='foreignkey')
    op.drop_constraint(None, 'hand', type_='foreignkey')
    op.drop_constraint(None, 'hand', type_='foreignkey')
    op.drop_constraint(None, 'hand', type_='foreignkey')
    op.drop_constraint(None, 'hand', type_='foreignkey')
    op.drop_constraint(None, 'hand', type_='foreignkey')
    op.drop_column('hand', 'player_9')
    op.drop_column('hand', 'player_8')
    op.drop_column('hand', 'player_7')
    op.drop_column('hand', 'player_6')
    op.drop_column('hand', 'player_5')
    op.drop_column('hand', 'player_4')
    op.drop_column('hand', 'player_3')
    op.drop_column('hand', 'player_2')
    op.drop_column('hand', 'player_1')
    op.create_table('token_blacklist',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('token_blacklist_pkey'))
    )
    op.create_index(op.f('ix_token_blacklist_token'), 'token_blacklist', ['token'], unique=True)
    # ### end Alembic commands ###
